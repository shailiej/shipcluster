apiVersion: v1
data:
  run.sh: |-
    @test "Testing MariaDB is accessible" {
      mysql -h ghost-mariadb -uroot -p$MARIADB_ROOT_PASSWORD -e 'show databases;'
    }
kind: ConfigMap
metadata:
  name: ghost-mariadb-tests
---
apiVersion: v1
data:
  my.cnf: |-
    [mysqld]
    skip-name-resolve
    explicit_defaults_for_timestamp
    basedir=/opt/bitnami/mariadb
    plugin_dir=/opt/bitnami/mariadb/plugin
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    tmpdir=/opt/bitnami/mariadb/tmp
    max_allowed_packet=16M
    bind-address=0.0.0.0
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
    log-error=/opt/bitnami/mariadb/logs/mysqld.log
    character-set-server=UTF8
    collation-server=utf8_general_ci

    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    default-character-set=UTF8
    plugin_dir=/opt/bitnami/mariadb/plugin

    [manager]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
kind: ConfigMap
metadata:
  labels:
    app: mariadb
    component: master
    release: ghost
  name: ghost-mariadb
---
apiVersion: v1
data:
  mariadb-password: UnJEOXdXZFc5cA==
  mariadb-root-password: eDZtMVdqUFp2aQ==
kind: Secret
metadata:
  labels:
    app: mariadb
    release: ghost
  name: ghost-mariadb
type: transparentghost
---
apiVersion: v1
data:
  ghost-password: MzlvSGVnbnB0Yw==
kind: Secret
metadata:
  labels:
    app: ghost
    release: ghost
  name: ghost
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mariadb
    component: master
    release: ghost
  name: ghost-mariadb
spec:
  ports:
  - name: mysql
    port: 3306
    targetPort: mysql
  selector:
    app: mariadb
    component: master
    release: ghost
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: ghost
    release: ghost
  name: ghost
spec:
  externalTrafficPolicy: Cluster
  loadBalancerIP: ""
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    app: ghost
  type: LoadBalancer
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    app: mariadb
    component: master
    release: ghost
  name: ghost-mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
      component: master
      release: ghost
  serviceName: ghost-mariadb
  template:
    metadata:
      labels:
        app: mariadb
        chart: mariadb-7.2.1
        component: master
        release: ghost
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: mariadb
                  release: ghost
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: MARIADB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-root-password
              name: ghost-mariadb
        - name: MARIADB_USER
          value: bn_ghost
        - name: MARIADB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mariadb-password
              name: ghost-mariadb
        - name: MARIADB_DATABASE
          value: bitnami_ghost
        image: docker.io/bitnami/mariadb:10.3.20-debian-9-r17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: mariadb
        ports:
        - containerPort: 3306
          name: mysql
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec mysqladmin status -uroot -p$MARIADB_ROOT_PASSWORD
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /bitnami/mariadb
          name: data
        - mountPath: /opt/bitnami/mariadb/conf/my.cnf
          name: config
          subPath: my.cnf
      initContainers: []
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: default
      volumes:
      - configMap:
          name: ghost-mariadb
        name: config
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      labels:
        app: mariadb
        component: master
        heritage: Tiller
        release: ghost
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: ghost
    release: ghost
  name: ghost
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test-success
  name: ghost-mariadb-test-3rllo
spec:
  containers:
  - command:
    - /tools/bats/bats
    - -t
    - /tests/run.sh
    env:
    - name: MARIADB_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          key: mariadb-root-password
          name: ghost-mariadb
    image: docker.io/bitnami/mariadb:10.3.20-debian-9-r17
    imagePullPolicy: IfNotPresent
    name: mariadb-test
    volumeMounts:
    - mountPath: /tests
      name: tests
      readOnly: true
    - mountPath: /tools
      name: tools
  initContainers:
  - command:
    - bash
    - -c
    - |
      set -ex
      # copy bats to tools dir
      cp -R /usr/local/libexec/ /tools/bats/
    image: docker.io/dduportal/bats:0.4.0
    name: test-framework
    volumeMounts:
    - mountPath: /tools
      name: tools
  restartPolicy: Never
  volumes:
  - configMap:
      name: ghost-mariadb-tests
    name: tests
  - emptyDir: {}
    name: tools
