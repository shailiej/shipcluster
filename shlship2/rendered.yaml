apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: flux
  name: flux
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    name: flux
  name: flux
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    name: flux
  name: flux
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux
subjects:
- kind: ServiceAccount
  name: flux
  namespace: default
---
apiVersion: v1
kind: Secret
metadata:
  name: flux-git-deploy
type: CrystalClear

---
apiVersion: v1
kind: Service
metadata:
  name: memcached
spec:
  ports:
  - name: memcached
    port: 11211
  selector:
    name: memcached
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flux
spec:
  replicas: 1
  selector:
    matchLabels:
      name: flux
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        prometheus.io/port: "3031"
      labels:
        name: flux
    spec:
      containers:
      - args:
        - --memcached-service=
        - --ssh-keygen-dir=/var/fluxd/keygen
        - --git-url=git@github.com:weaveworks/flux-get-started
        - --git-branch=master
        - --listen-metrics=:3031
        image: docker.io/fluxcd/flux:1.14.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/flux/v6/identity.pub
            port: 3030
          initialDelaySeconds: 5
          timeoutSeconds: 5
        name: flux
        ports:
        - containerPort: 3030
        readinessProbe:
          httpGet:
            path: /api/flux/v6/identity.pub
            port: 3030
          initialDelaySeconds: 5
          timeoutSeconds: 5
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /etc/fluxd/ssh
          name: git-key
          readOnly: true
        - mountPath: /var/fluxd/keygen
          name: git-keygen
      serviceAccountName: flux
      volumes:
      - name: git-key
        secret:
          defaultMode: 256
          secretName: flux-git-deploy
      - emptyDir:
          medium: Memory
        name: git-keygen
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memcached
spec:
  replicas: 1
  selector:
    matchLabels:
      name: memcached
  template:
    metadata:
      labels:
        name: memcached
    spec:
      containers:
      - args:
        - -m 512
        - -I 5m
        - -p 11211
        image: memcached:1.5.15
        imagePullPolicy: IfNotPresent
        name: memcached
        ports:
        - containerPort: 11211
          name: clients
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 11211
          runAsUser: 11211
---
apiVersion: troubleshoot.replicated.com/v1beta1
kind: Collector
metadata:
  name: collector-sample
spec:
  collectors:
  - secret:
      includeValue: false
      key: uri
      name: myapp-postgres
      namespace: default
  - logs:
      limits:
        maxAge: 30d
        maxLines: 10000
      namespace: kube-system
      selector:
      - name=cilium-operator
  - run:
      args:
      - www.google.com
      collectorName: ping-google
      command:
      - ping
      image: flungo/netutils
      namespace: default
      timeout: 5s
  - http:
      collectorName: echo-ip
      get:
        url: https://api.replicated.com/market/v1/echo/ip
---
apiVersion: troubleshoot.replicated.com/v1beta1
kind: Preflight
metadata:
  name: example-preflight-checks
spec:
  analyzers:
  - clusterVersion:
      outcomes:
      - fail:
          message: The application requires at Kubernetes 1.13.0 or later, and recommends 1.15.0.
          uri: https://www.kubernetes.io
          when: < 1.13.0
      - warn:
          message: Your cluster meets the minimum version of Kubernetes, but we recommend you update to 1.15.0 or later.
          uri: https://kubernetes.io
          when: < 1.15.0
      - pass:
          message: Your cluster meets the recommended and required versions of Kubernetes.
          when: '>= 1.15.0'
  - customResourceDefinition:
      checkName: Gatekeeper policy runtime
      customResourceDefinitionName: constrainttemplates.templates.gatekeeper.sh
      outcomes:
      - fail:
          message: Gatekeeper is required for the application, but not found in the cluster.
          uri: https://enterprise.support.io/installing/gatekeeper
      - pass:
          message: Found a supported version of Gatekeeper installed and running in the cluster.
  - imagePullSecret:
      checkName: Registry credentials for Quay.io
      outcomes:
      - fail:
          message: |
            Cannot pull from quay.io. An image pull secret should be deployed to the cluster that has credentials to pull the images. To obtain this secret, please contact your support rep.
          uri: https://enterprise.support.io/installing/registry-credentials
      - pass:
          message: Found credentials to pull from quay.io
      registryName: quay.io
  - secret:
      checkName: Postgres connection string
      key: uri
      namespace: default
      outcomes:
      - fail:
          message: A secret named "myapp-postgres" must be deployed with a "uri" key
          uri: https://enterprise.support.io/installing/postgres
      - pass:
          message: Found a valid postgres connection string
      secretName: myapp-postgres
  collectors:
  - secret:
      includeValue: false
      key: uri
      name: myapp-postgres
      namespace: default
