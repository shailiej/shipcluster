apiVersion: v1
data:
  bitcoin.conf: |-
    server=1
    printtoconsole=1
    rpcuser=rpcuser
    rpcpassword=rpcpassword
kind: ConfigMap
metadata:
  labels:
    app: bitcoind
    release: bitcoind
  name: bitcoind
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bitcoind
    release: bitcoind
  name: bitcoind
spec:
  ports:
  - name: rpc
    port: 8332
    targetPort: rpc
  - name: p2p
    port: 8333
    targetPort: p2p
  - name: testnet
    port: 18332
  - name: testnet-p2p
    port: 18333
  selector:
    app: bitcoind
    release: bitcoind
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bitcoind
    release: bitcoind
  name: bitcoind
spec:
  selector:
    matchLabels:
      app: bitcoind
      release: bitcoind
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: bitcoind
        release: bitcoind
    spec:
      containers:
      - image: arilot/docker-bitcoind:0.17.1
        imagePullPolicy: IfNotPresent
        name: bitcoind
        ports:
        - containerPort: 8332
          name: rpc
        - containerPort: 8333
          name: p2p
        - containerPort: 18332
          name: testnet
        - containerPort: 18333
          name: testnetp2pport
        resources: {}
        volumeMounts:
        - mountPath: /bitcoin
          name: data
        - mountPath: /bitcoin/.bitcoin/bitcoin.conf
          name: config
          subPath: bitcoin.conf
      initContainers:
      - command:
        - sh
        - -c
        - cp /configmap/bitcoin.conf /bitcoin/.bitcoin/bitcoin.conf
        image: busybox
        name: copy-bitcoind-config
        volumeMounts:
        - mountPath: /configmap
          name: configmap
        - mountPath: /bitcoin/.bitcoin/
          name: config
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: config
      - configMap:
          name: bitcoind
        name: configmap
      - name: data
        persistentVolumeClaim:
          claimName: bitcoind
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app: bitcoind
    release: bitcoind
  name: bitcoind
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 300Gi
