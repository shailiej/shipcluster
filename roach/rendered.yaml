apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    component: cockroachdb-cockroachdb
    release: cockroachdb
  name: cockroachdb-cockroachdb-public
spec:
  ports:
  - name: grpc
    port: 26257
    targetPort: 26257
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    component: cockroachdb-cockroachdb
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/path: _status/vars
    prometheus.io/port: "8080"
    prometheus.io/scrape: "true"
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    component: cockroachdb-cockroachdb
    release: cockroachdb
  name: cockroachdb-cockroachdb
spec:
  clusterIP: None
  ports:
  - name: grpc
    port: 26257
    targetPort: 26257
  - name: http
    port: 8080
    targetPort: 8080
  publishNotReadyAddresses: true
  selector:
    component: cockroachdb-cockroachdb
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: cockroachdb-cockroachdb
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      component: cockroachdb-cockroachdb
      heritage: Tiller
      release: cockroachdb
  serviceName: cockroachdb-cockroachdb
  template:
    metadata:
      labels:
        chart: cockroachdb-2.1.17
        component: cockroachdb-cockroachdb
        heritage: Tiller
        release: cockroachdb
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - cockroachdb-cockroachdb
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - command:
        - /bin/bash
        - -ecx
        - exec /cockroach/cockroach start --logtostderr --insecure --advertise-host $(hostname).${STATEFULSET_FQDN} --http-host 0.0.0.0 --http-port 8080 --port 26257 --cache 25% --max-sql-memory 25%  --join ${STATEFULSET_NAME}-0.${STATEFULSET_FQDN}:26257,${STATEFULSET_NAME}-1.${STATEFULSET_FQDN}:26257,${STATEFULSET_NAME}-2.${STATEFULSET_FQDN}:26257
        env:
        - name: STATEFULSET_NAME
          value: cockroachdb-cockroachdb
        - name: STATEFULSET_FQDN
          value: cockroachdb-cockroachdb.default.svc.cluster.local
        - name: COCKROACH_CHANNEL
          value: kubernetes-helm
        image: cockroachdb/cockroach:v19.2.1
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 5
        name: cockroachdb-cockroachdb
        ports:
        - containerPort: 26257
          name: grpc
        - containerPort: 8080
          name: http
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /health?ready=1
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
        resources: {}
        volumeMounts:
        - mountPath: /cockroach/cockroach-data
          name: datadir
      terminationGracePeriodSeconds: 60
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: datadir
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    component: cockroachdb-cockroachdb
    release: cockroachdb
  name: cockroachdb-cockroachdb-budget
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      component: cockroachdb-cockroachdb
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    release: cockroachdb
  name: cockroachdb-cockroachdb-init
spec:
  template:
    metadata: null
    spec:
      containers:
      - command:
        - /bin/bash
        - -ecx
        - until /cockroach/cockroach init --insecure --host=cockroachdb-cockroachdb-0.cockroachdb-cockroachdb --port 26257; do sleep 5; done
        image: cockroachdb/cockroach:v19.2.1
        imagePullPolicy: Always
        name: cluster-init
        resources: {}
      restartPolicy: OnFailure
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: test-success
  name: cockroachdb-cockroachdb-test
spec:
  containers:
  - command:
    - /cockroach/cockroach
    - sql
    - --insecure
    - --host
    - cockroachdb-cockroachdb-public.default
    - --port
    - "26257"
    - -e
    - SHOW DATABASES;
    image: cockroachdb/cockroach:v19.2.1
    imagePullPolicy: Always
    name: client-test
  restartPolicy: Never
